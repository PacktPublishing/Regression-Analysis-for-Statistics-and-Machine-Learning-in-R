mean(iris$Petal.Length)
median(iris$Petal.Length)
range(iris$Petal.Length)
x<-rnorm(1000, 3, .25)
hist(x)
mean(x)
mean(x)
x=c(2,3,4,5,2,6,8,800,9,10,6,8)
mean(x)
median(x)
time <- c(19.09, 19.55, 17.89, 17.73, 25.15, 27.27, 25.24, 21.05, 21.65, 20.92, 22.61, 15.71, 22.04, 22.60, 24.25)
hist(time)
library(moments)
skewness(time) #skewness is a measure of the asymmetry o
N <- 10000
x <- rnbinom(N, 10, .5)
hist(x)
skewness(x) #positive skew
head(iris)
hist(iris$Petal.Length)
skewness(iris$Petal.Length)
mean(iris$Petal.Length)
median(iris$Petal.Length)
range(iris$Petal.Length) #minimum to maximum
head(iris)
summary(iris)
std=sd(iris$Petal.Length)
std
summary(iris$Petal.Length)
install.packages("sciplot")
se(iris$Petal.Length)
library(sciplot)
se(iris$Petal.Length)
boxplot(iris$Petal.Length)
boxplot(iris$Petal.Length, main="Sepal Length")
boxplot(iris$Petal.Length, main="Sepal Length",ylab="length")
data("ToothGrowth")
head(ToothGrowth)
boxplot(len ~ supp, data = ToothGrowth)
library(ggplot2)
qplot(ToothGrowth$supp, ToothGrowth$len, geom="boxplot")
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
head(ChickWeight)
sp1 <- ggplot(ChickWeight, aes(x=Time, y=weight))
ggplot(ChickWeight, aes(x=Time, y=weight))+ geom_boxplot(aes(group=Time))
ggplot(ChickWeight, aes(x=Time, y=weight))+
geom_boxplot(aes(group=Time))
library(MASS)
head(birthwt)
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()
ggplot(birthwt, aes(x=factor(smoke), y=bwt)) + geom_boxplot()
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot(notch=TRUE)
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()
+coord_flip()
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()+coord_flip()
head(airquality)
airquality$Month <- factor(airquality$Month,
labels = c("May", "Jun", "Jul", "Aug", "Sep"))
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()+ggtitle("Birth wt")
head(ChickWeight)
summary(ChickWeight)
ggplot(ChickWeight, aes(x=Time, y=weight))+
geom_boxplot(aes(group=Time))+facet_grid(. ~ Diet)
summary(ChickWeight)
data("diamonds")
head(diamonds)
ggplot(diamonds, aes(factor(cut), price, fill=cut)) + geom_boxplot() + ggtitle("Diamond Price according Cut") + xlab("Type of Cut") + ylab("Diamond Price U$")
head(iris)
summary(iris$Petal.Length)
std=sd(iris$Petal.Length) #standard deviation of petal length mean
std
se(iris$Petal.Length)
boxplot(iris$Petal.Length, main="Sepal Length",ylab="length")
data("ToothGrowth")
head(ToothGrowth)
boxplot(len ~ supp, data = ToothGrowth) #compare tooth length
qplot(ToothGrowth$supp, ToothGrowth$len, geom="boxplot")
ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()
head(birthwt)
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()+ggtitle("Birth wt")
ggplot(birthwt, aes(x=factor(race), y=bwt)) + geom_boxplot()+coord_flip()
head(ChickWeight)
summary(ChickWeight)
ggplot(ChickWeight, aes(x=Time, y=weight))+
geom_boxplot(aes(group=Time))
ggplot(ChickWeight, aes(x=Time, y=weight))+
geom_boxplot(aes(group=Time))+facet_grid(. ~ Diet)
head(diamonds)
ggplot(diamonds, aes(factor(cut), price, fill=cut)) + geom_boxplot() + ggtitle("Diamond Price according Cut") + xlab("Type of Cut") + ylab("Diamond Price U$")
X <- c(1,5,6,7,8,9)
resampled <- matrix(sample(X, size = length(X) * 25, replace = TRUE), nrow = length(X))
resampled
medians <- apply(resampled, 2, median)
summary(medians)
head(faithful)
wait=quantile(faithful$waiting)
wait
quantile(faithful$waiting,c(0.33,0.65,0.98))
hist(faithful$waiting)
hist(faithful$eruptions)
waiting
hist(faithful$waiting)
pop_sd <- sd(faithful$waiting)
pop_mean <- mean(faithful$waiting)
popsd <- sd(faithful$waiting)
popmean <- mean(faithful$waiting)
popsd
popmean
data(iris)
library(ggplot2)
qplot(Sepal.Length, Petal.Length, data = iris)
qplot(Sepal.Length, Petal.Length, data = iris,color = Species)
install.packages("lme4")
library(lme4)
install.packages("lme4")
library(lme4)
library(lme4)
m.base <- lmer(weight ~ Time + (1 | Chick), data=ChickWeight, REML=F)
m.base
anova(m.base)
m1 <- lmer(weight ~ Time + (1 | Chick), data=ChickWeight, REML=F)
m2 <- lmer(weight ~ Time + (1 | Time), data=ChickWeight, REML=F)
anova(m1,m2)
m1 <- lmer(weight ~ Time + (1 | Chick), data=ChickWeight, REML=F)
coeffs <- coef(summary(m1))
coeffs
p <- pnorm(abs(coeffs[, "t value"]), lower.tail = FALSE) * 2
p
cbind(coeffs, "p value" = round(p,3))
ggplot(fortify(m1), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean, geom="line")
head(ChickWeight)
library(ggplot2)
ggplot(fortify(m1), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean, geom="line")
summary(m1)
m <- lmer(weight ~ Time * Diet + (1 | Chick),
data = ChickWeight, REML = F)
summry(m)
summary(m)
1-pnorm(1.6)
pnorm(1.6)
pnorm(1.25)
1-pnorm(1.25)
pnorm(0)
1-pnorm(2)
qqnorm(ToothGrowth$len)
qqline(ToothGrowth$len)
hist(ToothGrowth$len)
normdis<-rnorm(n=1000, m=30, sd=3)
hist(normdis)
data("ToothGrowth")
head(ToothGrowth)
hist(ToothGrowth$len)
qqnorm(ToothGrowth$len)
qqline(ToothGrowth$len)
shapiro.test(ToothGrowth$len) #data are normally distributed
head(faithful)
shapiro.test(faithful$eruptions)
shapiro.test(faithful$waiting)
head(ToothGrowth)
shapiro.test(ToothGrowth$len)
n = length(ToothGrowth$len)
s = sd(ToothGrowth$len)
SE = s/sqrt(n)
SE
zval=qnorm(0.975)
moe=zval*SE
zval
xbar = mean(ToothGrowth$len)   # sample mean
xbar + c(−moe, moe)
height.response = na.omit(survey$Height)
library(MASS)
height.response = na.omit(survey$Height)
n = length(ToothGrowth$len)
n
tval=qnorm(0.975,df=n-1) #critical t value
qt(0.975)
tval=qt(0.975,df=n-1) #critical t value
tval
moe=tval*SE #margin of error
xbar = mean(ToothGrowth$len)   # sample mean
xbar + c(−moe, moe)
t.test(ToothGrowth$len)
t.test(ToothGrowth$len,conf.level = 0.9)
head(ToothGrowth)
s = sd(ToothGrowth$len)
zval=qnorm(0.975) #z value
zval
moe=zval*SE #margin of error
xbar = mean(ToothGrowth$len)   # sample mean
xbar + c(−moe, moe)
n = length(ToothGrowth$len)
n
tval=qt(0.975,df=n-1) #critical t value
tval   #very close to z value
moe=tval*SE #margin of error
xbar = mean(ToothGrowth$len)   # sample mean
xbar + c(−moe, moe)
t.test(ToothGrowth$len) #95% CI for mean
t.test(ToothGrowth$len,conf.level = 0.9)
m1 <- lmer(weight ~ Time + (1 | Chick), data=ChickWeight, REML=F)
m2 <- lmer(weight ~ Time + (1 | Time), data=ChickWeight, REML=F)
anova(m1,m2)
library(lme4)
m1 <- lmer(weight ~ Time + (1 | Chick), data=ChickWeight, REML=F)
m2 <- lmer(weight ~ Time + (1 | Time), data=ChickWeight, REML=F)
anova(m1,m2)
coeffs <- coef(summary(m1))
p <- pnorm(abs(coeffs[, "t value"]), lower.tail = FALSE) * 2
p
model = lmer(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight)
library(lme4)
model = lmer(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight)
summary(model)
model2 = lmer(log(weight) ~ Time+Diet + (1 | Chick), data=ChickWeight,REML=F)
summary(model2)
model3 = lmer(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight,REML=F)
summary(model3)
anova(model2,model3)
coef(summary(model3))
coeffs <- coef(summary(model3))
p <- pnorm(abs(coeffs[, "t value"]), lower.tail = FALSE) * 2
p
library(ggplot2)
ggplot(fortify(model3), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean, geom="line")
ggplot(fortify(model3), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean, geom="line")
ggplot(fortify(model3), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean)
library(MASS)
data(oats)
head(oats)
names(oats) = c('block', 'variety', 'nitrogen', 'yield')
oats$mainplot = oats$variety
oats$subplot = oats$nitrogen
summary(oats)
library(nlme)
model3a = lme(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight,REML=F)
model3a = lme(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight)
ggplot(fortify(model2), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean)
ggplot(fortify(model2), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean,geom="line")
anova(model2,model3)
summary(model3)
exp(0.0765)
exp(0.067+0.048)
1.079-1
1.121-1
model4 = lmer(log(weight) ~ Time*Diet +  (1 + Time | Chick), data=ChickWeight,REML=F)
summary(model4)
install.packages("lsmeans")
library(lsmeans)
Chick.lst <- lstrends (model4, ~ Diet, var = "Time")
install.packages("lmerTest")
library(lmerTest)
Chick.lst <- lstrends (model4, ~ Diet, var = "Time")
Chick.lst
Clst <- lstrends (model4, ~ Diet, var = "Time")
model4 = lmer(log(weight) ~ Time*Diet +  (0 + Time | Chick), data=ChickWeight,REML=F)
summary(model4)
library(lsmeans)
library(lmerTest)
Clst <- lstrends (model4, ~ Diet, var = "Time")
Clst
head(ChickWeight)
library(nlme)
chickSlp <- lme(weight˜Time,
data=ChickWeight,
random=˜Time|Chick)
chickSlp <- lme(weight˜Time,data=ChickWeight,random=˜Time|Chick)
chickSlp <- lme(weight~Time,data=ChickWeight,random=˜Time|Chick)
chickSlp <- lme(weight~Time,data=ChickWeight,random=~Time|Chick)
summary(chickSlp)
head(ChickWeight)
summary(ChickWeight)
model = lmer(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight,REML=F)
summary(model)
summary(model2)
model3 = lmer(log(weight) ~ Time*Diet + (1 | Chick), data=ChickWeight,REML=F)
summary(model3)
anova(model2,model3)
coeffs <- coef(summary(model3))
p <- pnorm(abs(coeffs[, "t value"]), lower.tail = FALSE) * 2
p
ggplot(fortify(model2), aes(Time, weight, color=Diet)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean) #diets influence wt gain
summary(model3)
exp(0.0765) #a 7.9% increase
1-1.079
exp(0.067+0.048) #12.1% increase in weight
model4 = lmer(log(weight) ~ Time*Diet +  (0 + Time | Chick), data=ChickWeight,REML=F)
summary(model4)
Clst <- lstrends (model4, ~ Diet, var = "Time")
CIlst
CIlst
Clst <- lstrends (model4, ~ Diet, var = "Time")
Clst
pnorm(2.5)
t.test(ToothGrowth$len,conf.level = 0.9)
install.packages("ElemStatLearn")
library(ggord)
data(iris)
head(iris)
log.x<- log(iris[, 1:4])
ir.species <- iris[, 5]
ir.pca <- prcomp(log.x,
center = TRUE,
scale. = TRUE) #apply on quantitative variables
print(ir.pca)
plot(ir.pca, type = "l")
p <- ggord(ir.pca, iris$Species)
p
install.packages("FactoMineR")
library("FactoMineR")
library("factoextra")
res.pca <- PCA(log.x,  graph = FALSE)
library("FactoMineR")
library("FactoMineR")
install.packages("FactoMineR")
library("FactoMineR")
library("factoextra")
res.pca <- PCA(log.x,  graph = FALSE)
log.x<- log(iris[, 1:4])
ir.species <- iris[, 5]
ir.pca <- prcomp(log.x,
center = TRUE,
scale. = TRUE) #apply on quantitative variables
print(ir.pca)
plot(ir.pca, type = "l")
summary(ir.pca)
p <- ggord(ir.pca, iris$Species)
p
library(ggord)
p <- ggord(ir.pca, iris$Species)
p
res.pca <- PCA(log.x,  graph = FALSE)
get_eig(res.pca)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 90))
var <- get_pca_var(res.pca)
var
head(var$contrib)
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
fviz_pca_var(res.pca, col.var = "black")
data(iris)
head(iris)
log.x<- log(iris[, 1:4])
ir.species <- iris[, 5]
ir.pca <- prcomp(log.x,
center = TRUE,
scale. = TRUE) #apply on quantitative variables
print(ir.pca)
plot(ir.pca, type = "l")
summary(ir.pca) #how much variability do PCs explain
p <- ggord(ir.pca, iris$Species)
p
res.pca <- PCA(log.x,  graph = FALSE)
get_eig(res.pca)
fviz_screeplot(res.pca, addlabels = TRUE, ylim = c(0, 90))
var <- get_pca_var(res.pca)
var
head(var$contrib)
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
fviz_contrib(res.pca, choice = "var", axes = 2, top = 10)
install.packages("rgbif")
library("rgbif")
head(name_lookup(query='Cnaemidophorus', rank="genus", return="data"))
head(name_lookup(query='Catopsilia', rank="genus", return="data"))
x=head(name_lookup(query='Catopsilia', rank="genus", return="data"))
head(x)
head(name_lookup(query='Catopsilia pomona', return = 'data'))
occ_search(scientificName = "Catopsilia pomona", limit = 20)
dan_ple=occurrencelist(sciname = 'Danaus plexippus',
coordinatestatus = TRUE, maxresults = 1000,
latlongdf = TRUE, removeZeros = TRUE)
x=occ_search(scientificName = "Catopsilia pomona")
head(x)
library(maps)
library(ggplot2)
world = map_data("world")
ggplot(world, aes(long, lat)) +
geom_polygon(aes(group = group), fill = "white",
color = "gray40", size = .2) +
geom_jitter(data = x,
aes(decimalLongitude, decimalLatitude), alpha=0.6,
size = 4, color = "red") +
opts(title = "Danaus plexippus")
Dan_chr=occurrencelist(sciname = 'Danaus chrysippus',
coordinatestatus = TRUE,
maxresults = 1000,
latlongdf = TRUE, removeZeros = TRUE)
occurrencelist(scientificname = 'Accipiter erythronemius', coordinatestatus = TRUE,
maxresults = 5)
occ_search(scientificname = 'Accipiter erythronemius', coordinatestatus = TRUE,
maxresults = 5)
occ_search(scientificName = "Ursus americanus", limit = 5)
type(x)
class(x)
occ_search(geometry=c(-125.0,38.4,-121.8,40.9), limit=20)
x=c(1,12,30,54,5)
length(x)
typeof(x) #what type is my vector
x[2] #index number
x[1] #index number
x=c(x,8) #add another value
x
length(x)
x=c(x,"cat") #character vector
x
typeof(x)
x[1:3]
x[1:4]
series <- 1:10
seq(10)
y=seq(1, 10, by = 2)
y
typeof(y)
typeof(as.integer(y)) #coerce it into a different data type
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m2=matrix(y,nrow=3,ncol=2)
m2=matrix(1:6,nrow=3,ncol=2)
m2
x <- 1:4
y <- 10:13
cbind(x, y) #join of the basis of columns
nrow(cbind(x, y)) #no of rows
ncol(cbind(x, y)) #no of columns
rbind(x, y) #join by rows
df1=as.data.frame((cbind(x,y))) #convert to data farme
df1
str(df1)
length(df1)
data(package="datasets")
data(ChickWeight)
str(ChickWeight)
head(ChickWeight)
library(corrplot)
corr1<-cor(mtcars) #compute multiple correlations
corr1
corrplot(x)
corrplot(corr1, method="color")
hist(mtcars$mpg)
hist(mtcars$wt)
shapiro.test(mtcars$mpg)
shapiro.test(mtcars$wt) # => p = 0.09
head(mtcars)
df=mtcars
fit1=lm(mpg~hp,data=df)
summary(fit1)
fit2=lm(Petal.Length~.-Species, data=iris)#remove species from analysis
summary(fit2)
fit2=lm(Petal.Length~., data=iris)
summary(fit2)
plot(fit2)
library(MASS)
bc <- boxcox(Sepal.Width ~ Petal.Width, data=iris)
trans <- bc$x[which.max(bc$y)]
trans
fit4 <- lm(Sepal.Width^trans ~ Petal.Width, data=iris)
summary(fit4)
par(mfrow = c(2, 2))
plot(fit4) #not all data can be transformed
exp(-0.69)
install.packages("pdp")
x=read.csv("sha2.csv")
head(x)
install.packages("h2o")
library(h2o)
h2o.init(nthreads = -1)
h2o.shutdown(prompt = TRUE)
install.packages("devtools")
devtools::install_github("rstudio/keras")
devtools::install_github("rstudio/tensorflow")
library("LearnBayes", lib.loc="~/R/win-library/3.3")
detach("package:LearnBayes", unload=TRUE)
install.packages("LearnBayes")
library(LearnBayes)
install.packages("BLR")
install.packages("brms")
setwd("F:\\PKNP\\PKNPData_Aug2016")
install.packages("BayesFactor")
data(studentdata)
install.packages("LearnBayes")
library(LearnBayes)
data(studentdata)
attach(studentdata)
head(studentdata)
setwd("F:\\RegressionModelling_R\\Data\\section1")
x=read.csv("summer.csv")
head(x)
str(x)
newdata <- subset(x, Country=="HUN")
head(newdata)
table(newdata$Discipline)
t= table(newdata$Discipline, newdata$Year)
t
t1=table(newdata$Discipline)
barplot(t)
barplot(t1)
